version: '3.8'

services:
  postgres_db:
    image: postgres:17.0-alpine
    container_name: postgres_db
    env_file:
      - .env
    volumes:
      - postgresql_data:/var/lib/postgresql/data
      - ./prisma/custom:/docker-entrypoint-initdb.d/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 30s
      timeout: 10s
      retries: 5
    ports:
      - 5432:5432
    networks:
      - postgres-network

  api:
    image: back3nd:alpha  # Usando a imagem que você construiu
    container_name: back3nd
    depends_on:
      - postgres_db  # Garante que o banco de dados esteja disponível antes da API
    ports:
      - "3737:3737"  # Mapeia a porta da API
      - "3000:3000"  # Mapeia a porta do Studio
      - "8087:80"  # Mapeia a porta do Nginx
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres_db:5432/${POSTGRES_DB}?schema=public
    networks:
      - postgres-network

volumes:
  postgresql_data:

networks:
  postgres-network:
    driver: bridge
