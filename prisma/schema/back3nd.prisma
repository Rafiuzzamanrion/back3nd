enum attendance_status {
  PRESENT
  ABSENT
  EXCUSED
}

enum day_of_week {
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
  SUNDAY
}

enum period {
  MANHA
  TARDE
  NOITE
}

enum status {
  ATIVO
  INATIVO
  GRADUADO
  SUSPENSO
  TRANSFERIDO
}

enum situation_type {
  PENDENTE
  CURSANDO
  APROVADO
  APROVADO_PELO_CONSELHO
  APROVADO_COM_DEPENDENCIA
  REPROVADO
  TRANSFERIDO
  ABANDONO
  FALECIDO
}

enum gender_type {
  MASCULINO
  FEMININO
}

enum residence_zone_type {
  URBANA
  RURAL
}

enum responsibletype {
  PAI
  MAE
  AMBOS
}

enum ethnicity_type {
  BRANCA
  PRETA
  PARDA
  AMARELA
  INDIGENA
  NAO_DECLARADA
}

enum deficiency_type {
  VISUAL
  AUDITIVA
  FISICA
  INTELECTUAL
  MENTAL
  MULTIPLA
  OUTROS
  NAO_POSSUI
}

enum teaching_type {
  COMPLEMENTAR
  PADRAO
}

enum regime_type {
  PRESENCIAL
  EAD
  SEMI_PRESENCIAL
}

enum course_modality {
  ENSINO_REGULAR
  EJA
  EDUCACAO_PROFISSIONAL
  EDUCACAO_ESPECIAL
}

model class_session {
  id            String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  school_id     String      @db.Uuid
  discipline_id String      @db.Uuid
  timetable_id  String      @db.Uuid
  day_of_week   day_of_week
  start_time    DateTime    @db.Time
  end_time      DateTime    @db.Time
  metadata      Json?
  user_created  String?     @db.Uuid
  created_at    DateTime    @default(now()) @db.Timestamp(6)
  deleted_at    DateTime?   @db.Timestamp(6)
  updated_at    DateTime?   @db.Timestamp(6)
}

model teachertotimetable {
  a String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  b String @db.Uuid
}

model academic_year {
  id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  school_id    String    @db.Uuid
  template_id  String    @db.Uuid
  ref_year     Int
  metadata     Json?
  created_at   DateTime  @default(now()) @db.Timestamp(6)
  updated_at   DateTime? @db.Timestamp(6)
  deleted_at   DateTime? @db.Timestamp(6)
  user_created String?   @db.Uuid
}

model academic_year_template {
  id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  ref_year     Int
  name         String    @db.VarChar(100)
  stages       Json
  stage_count  Int       @db.Integer
  metadata     Json?
  created_at   DateTime  @default(now()) @db.Timestamp(6)
  updated_at   DateTime? @db.Timestamp(6)
  deleted_at   DateTime? @db.Timestamp(6)
  user_created String?   @db.Uuid
}

model attendance {
  id           String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  school_id    String            @db.Uuid
  student_id   String            @db.Uuid
  date         DateTime          @db.Timestamp(6)
  status       attendance_status
  metadata     Json?
  user_created String?           @db.Uuid
  created_at   DateTime          @default(now()) @db.Timestamp(6)
  deleted_at   DateTime?         @db.Timestamp(6)
  updated_at   DateTime?         @db.Timestamp(6)
}

model classroom {
  id                  String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  school_id           String       @db.Uuid
  series_id           String       @db.Uuid
  institution_id      String       @db.Uuid
  course_id           String       @db.Uuid
  teacher_id          String       @db.Uuid
  max_students        Int
  start_time          DateTime?    @db.Time
  start_time_interval DateTime?    @db.Time
  end_time_interval   DateTime?    @db.Time
  end_time            DateTime?    @db.Time
  day_of_week         day_of_week?
  name                String       @db.VarChar(100)
  period              period       @default(MANHA)
  status              status       @default(ATIVO)
  abbreviation        String?      @db.VarChar(100)
  year                Int
  metadata            Json?
  user_created        String?      @db.Uuid
  created_at          DateTime     @default(now()) @db.Timestamp(6)
  deleted_at          DateTime?    @db.Timestamp(6)
  updated_at          DateTime?    @db.Timestamp(6)
}

model course {
  id              String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name            String           @db.VarChar(100)
  status          status           @default(ATIVO)
  metadata        Json?
  user_created    String?          @db.Uuid
  created_at      DateTime         @default(now()) @db.Timestamp(6)
  deleted_at      DateTime?        @db.Timestamp(6)
  updated_at      DateTime?        @db.Timestamp(6)
  teaching_type   teaching_type?
  regime_type     regime_type?
  course_modality course_modality?
  workload        String?          @db.VarChar
  institution_id  String?          @db.Uuid
  course_stage    String?          @db.VarChar
  description     String?          @db.Text
  school_id       String?          @db.Uuid
}

model document {
  id                  String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  file_name           String    @db.VarChar(255)
  mime_type           String    @db.VarChar(255)
  size                BigInt
  is_current_version  Boolean   @default(true)
  file_hash           String?   @db.Text
  upload_date         DateTime  @default(now()) @db.Timestamp(6)
  storage_path        String    @db.Text
  version             Int       @default(1)
  compression_applied Boolean   @default(false)
  metadata            Json?
  is_deleted          Boolean   @default(false)
  created_at          DateTime  @default(now()) @db.Timestamp(6)
  updated_at          DateTime? @db.Timestamp(6)
  deleted_at          DateTime? @db.Timestamp(6)
  user_created        String?   @db.Uuid
}

model enrollment {
  id                String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  school_id         String          @db.Uuid
  student_id        String          @db.Uuid
  course_id         String          @db.Uuid
  classroom_id      String          @db.Uuid
  series_id         String          @db.Uuid
  name              String          @db.VarChar(100)
  created_at        DateTime        @default(now()) @db.Timestamp(6)
  deleted_at        DateTime?       @db.Timestamp(6)
  updated_at        DateTime?       @db.Timestamp(6)
  date_enrollment   DateTime        @db.Date
  observations      String?         @db.VarChar(200)
  status            status          @default(ATIVO)
  situation         situation_type?
  enrollment_code   String?         @db.VarChar(100)
  institution_id    String?         @db.Uuid
  pre_enrollment_id String?         @db.Uuid
}

model grade {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  school_id     String    @db.Uuid
  student_id    String    @db.Uuid
  discipline_id String    @db.Uuid
  value         Float
  date          DateTime  @db.Timestamp(6)
  metadata      Json?
  user_created  String?   @db.Uuid
  created_at    DateTime  @default(now()) @db.Timestamp(6)
  deleted_at    DateTime? @db.Timestamp(6)
  updated_at    DateTime? @db.Timestamp(6)
}

model student {
  id                     String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                   String              @db.VarChar(100)
  birthdate              DateTime            @db.Date
  gender                 gender_type         @default(MASCULINO)
  place_of_birth         String?             @db.VarChar(100)
  postalcode             String?             @db.VarChar(100)
  residence_zone         residence_zone_type @default(URBANA)
  number_address         String?             @db.VarChar(100)
  cpf                    String?             @db.VarChar(100)
  neighborhood           String?             @db.VarChar(100)
  city                   String?             @db.VarChar(100)
  complement             String?             @db.VarChar(100)
  father_name            String?             @db.VarChar(100)
  father_email           String?             @db.VarChar(100)
  father_cpf             String?             @db.VarChar(100)
  father_phone           String?             @db.VarChar(100)
  mother_name            String?             @db.VarChar(100)
  mother_email           String?             @db.VarChar(100)
  mother_cpf             String?             @db.VarChar(100)
  mother_phone           String?             @db.VarChar(100)
  rg_number              String?             @db.VarChar(100)
  rg_state               String?             @db.Char(2)
  rg_issue_date          DateTime?           @db.Date
  rg_issuer              String?             @db.VarChar(100)
  birth_certificate      String?             @db.VarChar(100)
  docs_type              String?             @db.VarChar(100)
  responsible_type       responsibletype     @default(PAI)
  email                  String?             @db.VarChar(255)
  phone                  String              @db.VarChar(15)
  address                String?             @db.VarChar(255)
  status                 status              @default(ATIVO)
  photo                  Bytes?
  metadata               Json?
  user_created           String?             @db.Uuid
  created_at             DateTime            @default(now()) @db.Timestamp(6)
  deleted_at             DateTime?           @db.Timestamp(6)
  updated_at             DateTime?           @db.Timestamp(6)
  ethnicity              ethnicity_type?
  deficiency             deficiency_type?
  deficiency_description String?             @db.VarChar
  city_state             String?             @db.VarChar
  period                 period?
}

model holidays {
  id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name         String   @db.VarChar(100)
  holiday_date DateTime @db.Date
  description  String?  @db.VarChar(100)
  weekday      String?  @db.VarChar(10)
}

model institution {
  id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name         String    @db.VarChar(100)
  address      String?   @db.VarChar(255)
  city         String?   @db.VarChar(100)
  state        String?   @db.Char(2)
  postalcode   String?   @db.VarChar(10)
  phone        String?   @db.VarChar(15)
  email        String?   @db.VarChar(255)
  metadata     Json?
  user_created String?   @db.Uuid
  singleton    Int       @default(1)
  created_at   DateTime  @default(now()) @db.Timestamp(6)
  deleted_at   DateTime? @db.Timestamp(6)
  updated_at   DateTime? @db.Timestamp(6)
}

model institution_settings {
  id             BigInt    @id @default(autoincrement())
  created_at     DateTime  @default(now()) @db.Timestamp(6)
  institution_id String?   @db.Uuid
  date_opening   DateTime? @db.Date
  date_closing   DateTime? @db.Date
  school_days    Float?
  date_start     DateTime? @db.Date
  date_end       DateTime? @db.Date
}
